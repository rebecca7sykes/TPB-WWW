<html>
<head>
<style type="text/css">
<!--body{ margin-top: 5px; margin-right: 5px; margin-bottom: 5px; margin-left: 5px; background-color: #FFFFFF}
.toolbar { width: 20px; font: 12px Helvetica, Arial, sans-serif; color: #000000; margin-top: -1px; margin-right: 0px; margin-bottom: 0px; margin-left: 0px}
img { border: 0}
A:link {text-decoration: none; color: #3300FF}
A:visited {text-decoration: none; color: #CC00FF}
A:active {text-decoration: #FF0000}
A:hover {text-decoration: underline; color:#FF0000}
-->
</style>
<script language="javascript"> 
<!-- hide
function killerrors() {
return true;
}
window.onerror = killerrors;
// -->
</script>

<!-- Infrastructure code for the tree -->
<script>

function MyGotoPage(newPage)
{
	parent.ltop.gotopage(newPage);
}
function Folder(folderDescription, hreference)
{
  this.desc = folderDescription
  this.hreference = hreference 
  this.id = -1   
  this.navObj = 0  
  this.iconImg = 0  
  this.nodeImg = 0  
  this.isLastNode = 0 
 
  this.isOpen = true 
  this.iconSrc = "images/pg_bopen.gif"
  this.children = new Array 
  this.nChildren = 0 
 
  this.initialize = initializeFolder 
  this.setState = setStateFolder 
  this.addChild = addChild 
  this.createIndex = createEntryIndex 
  this.hide = hideFolder 
  this.display = display 
  this.renderOb = drawFolder 
  this.totalHeight = totalHeight 
  this.subEntries = folderSubEntries 
  this.outputLink = outputFolderLink 
} 
 
function setStateFolder(isOpen) 
{ 
  var subEntries 
  var totalHeight 
  var fIt = 0 
  var i=0 
 
  if (isOpen == this.isOpen) 
    return 
 
  if (browserVersion == 2)  
  { 
    totalHeight = 0 
    for (i=0; i < this.nChildren; i++) 
      totalHeight = totalHeight + this.children[i].navObj.clip.height 
      subEntries = this.subEntries() 
    if (this.isOpen) 
      totalHeight = 0 - totalHeight 
    for (fIt = this.id + subEntries + 1; fIt < nEntries; fIt++) 
      indexOfEntries[fIt].navObj.moveBy(0, totalHeight) 
  }  
  this.isOpen = isOpen 
  propagateChangesInState(this) 
} 
 
function propagateChangesInState(folder) 
{   
  var i=0 
 
  if (folder.isOpen) 
  { 
    if (folder.nodeImg) 
      if (folder.isLastNode) 
        folder.nodeImg.src = "images/pg_bmlastnode.gif" 
      else 
	  folder.nodeImg.src = "images/pg_bmnode.gif" 
    folder.iconImg.src = "images/pg_bopen.gif" 
    for (i=0; i<folder.nChildren; i++) 
      folder.children[i].display() 
  } 
  else 
  { 
    if (folder.nodeImg) 
      if (folder.isLastNode) 
        folder.nodeImg.src = "images/pg_bplastnode.gif" 
      else 
	  folder.nodeImg.src = "images/pg_bpnode.gif" 
    folder.iconImg.src = "images/pg_bclosed.gif" 
    for (i=0; i<folder.nChildren; i++) 
      folder.children[i].hide() 
  }  
} 
 
function hideFolder() 
{ 
  if (browserVersion == 1) { 
    if (this.navObj.style.display == "none") 
      return 
    this.navObj.style.display = "none" 
  } else { 
    if (this.navObj.visibility == "hiden") 
      return 
    this.navObj.visibility = "hiden" 
  } 
   
  this.setState(0) 
} 
 
function initializeFolder(level, lastNode, leftSide) 
{ 
var j=0 
var i=0 
var numberOfFolders 
var numberOfDocs 
var nc 
      
  nc = this.nChildren 
   
  this.createIndex() 
 
  var auxEv = "" 
 
  if (browserVersion > 0) 
    auxEv = "<a href='javascript:clickOnNode("+this.id+")'>" 
  else 
    auxEv = "<a>" 
 
  if (level>0) 
    if (lastNode) 
    { 
      this.renderOb(leftSide + auxEv + "<img name='nodeIcon" + this.id + "' src='images/pg_bmlastnode.gif' width=16 height=22 border=0></a>") 
      leftSide = leftSide + "<img src='images/pg_bblank.gif' width=16 height=22>"  
      this.isLastNode = 1 
    } 
    else 
    { 
      this.renderOb(leftSide + auxEv + "<img name='nodeIcon" + this.id + "' src='images/pg_bmnode.gif' width=16 height=22 border=0></a>") 
      leftSide = leftSide + "<img src='images/pg_bvertline.gif' width=16 height=22>" 
      this.isLastNode = 0 
    } 
  else 
    this.renderOb("") 
   
  if (nc > 0) 
  { 
    level = level + 1 
    for (i=0 ; i < this.nChildren; i++)  
    { 
      if (i == this.nChildren-1) 
        this.children[i].initialize(level, 1, leftSide) 
      else 
        this.children[i].initialize(level, 0, leftSide) 
      } 
  } 
} 
 
function drawFolder(leftSide) 
{ 
  if (browserVersion == 2) { 
    if (!doc.yPos) 
      doc.yPos=8 
    doc.write("<layer id='folder" + this.id + "' top=" + doc.yPos + " visibility=hiden>") 
  } 
   
  doc.write("<table class='toolbar' ") 
  if (browserVersion == 1) 
    doc.write(" id='folder" + this.id + "' style='position:block;' ") 
  doc.write(" border=0 cellspacing=0 cellpadding=0>") 
  doc.write("<tr><td>") 
  doc.write(leftSide) 
this.outputLink() 
  doc.write("<img name='folderIcon" + this.id + "' ") 
  doc.write("src='" + this.iconSrc+"' border=0></a>") 
  doc.write("</td><td valign=middle nowrap>") 
  if (USETEXTLINKS) 
  { 
    this.outputLink() 
    doc.write(this.desc + "</a>") 
  } 
  else 
    doc.write(this.desc) 
  doc.write("</td>")  
  doc.write("</table>") 
   
  if (browserVersion == 2) { 
    doc.write("</layer>") 
  } 
 
  if (browserVersion == 1) { 
    this.navObj = doc.all["folder"+this.id] 
    this.iconImg = doc.all["folderIcon"+this.id] 
    this.nodeImg = doc.all["nodeIcon"+this.id] 
  } else if (browserVersion == 2) { 
    this.navObj = doc.layers["folder"+this.id] 
    this.iconImg = this.navObj.document.images["folderIcon"+this.id] 
    this.nodeImg = this.navObj.document.images["nodeIcon"+this.id] 
    doc.yPos=doc.yPos+this.navObj.clip.height 
  } 
} 
 
function outputFolderLink() 
{ 
  if (this.hreference) 
  { 
    doc.write("<a href='#' onClick='javascript:MyGotoPage(" + this.hreference + "); return false'") 
    if (browserVersion > 0) 
      doc.write("onClick='javascript:clickOnFolder("+this.id+")'") 
    doc.write(">") 
  } 
  else 
    doc.write("<a>") 
} 
 
function addChild(childNode) 
{ 
  this.children[this.nChildren] = childNode 
  this.nChildren++ 
  return childNode 
} 
 
function folderSubEntries() 
{ 
  var i = 0 
  var se = this.nChildren 
 
  for (i=0; i < this.nChildren; i++){ 
    if (this.children[i].children) 
      se = se + this.children[i].subEntries() 
  } 
 
  return se 
} 
 
function Item(itemDescription, itemLink)  
{ 
  this.desc = itemDescription 
  this.link = itemLink 
  this.id = -1 
  this.navObj = 0 
  this.iconImg = 0 
  this.iconSrc = "images/pg_bdoc.gif" 
 
  this.initialize = initializeItem 
  this.createIndex = createEntryIndex 
  this.hide = hideItem 
  this.display = display 
  this.renderOb = drawItem 
  this.totalHeight = totalHeight 
} 
 
function hideItem() 
{ 
  if (browserVersion == 1) { 
    if (this.navObj.style.display == "none") 
      return 
    this.navObj.style.display = "none" 
  } else { 
    if (this.navObj.visibility == "hiden") 
      return 
    this.navObj.visibility = "hiden" 
  }     
} 
 
function initializeItem(level, lastNode, leftSide) 
{  
  this.createIndex() 
 
  if (level>0) 
    if (lastNode) 
    { 
      this.renderOb(leftSide + "<img src='images/pg_blastnode.gif' width=16 height=22>") 
      leftSide = leftSide + "<img src='images/pg_bblank.gif' width=16 height=22>"  
    } 
    else 
    { 
      this.renderOb(leftSide + "<img src='images/pg_bnode.gif' width=16 height=22>") 
      leftSide = leftSide + "<img src='images/pg_bvertline.gif' width=16 height=22>" 
    } 
  else 
    this.renderOb("")   
} 
 
function drawItem(leftSide) 
{ 
  if (browserVersion == 2) 
    doc.write("<layer id='item" + this.id + "' top=" + doc.yPos + " visibility=hiden>") 
     
  doc.write("<table class='toolbar' ") 
  if (browserVersion == 1) 
    doc.write(" id='item" + this.id + "' style='position:block;' ") 
  doc.write(" border=0 cellspacing=0 cellpadding=0>") 
  doc.write("<tr><td>") 
  doc.write(leftSide) 
  doc.write("<a href=" + this.link + ">") 
  doc.write("<img id='itemIcon"+this.id+"' ") 
  doc.write("src='"+this.iconSrc+"' border=0>") 
doc.write("</a>") 
  doc.write("</td><td valign=middle nowrap>") 
  if (USETEXTLINKS) 
    doc.write("<a href=" + this.link + ">" + this.desc + "</a>") 
  else 
    doc.write(this.desc) 
  doc.write("</table>") 
   
  if (browserVersion == 2) 
    doc.write("</layer>") 
 
  if (browserVersion == 1) { 
    this.navObj = doc.all["item"+this.id] 
    this.iconImg = doc.all["itemIcon"+this.id] 
  } else if (browserVersion == 2) { 
    this.navObj = doc.layers["item"+this.id] 
    this.iconImg = this.navObj.document.images["itemIcon"+this.id] 
    doc.yPos=doc.yPos+this.navObj.clip.height 
  } 
} 
 
 
function display() 
{ 
  if (browserVersion == 1) 
    this.navObj.style.display = "block" 
  else 
    this.navObj.visibility = "show" 
} 
 
function createEntryIndex() 
{ 
  this.id = nEntries 
  indexOfEntries[nEntries] = this 
  nEntries++ 
} 

function totalHeight()
{ 
  var h = this.navObj.clip.height 
  var i = 0 
   
  if (this.isOpen) 
    for (i=0 ; i < this.nChildren; i++)  
      h = h + this.children[i].totalHeight() 
 
  return h 
} 

function clickOnFolder(folderId) 
	{ 
		var clicked = indexOfEntries[folderId] 
 
  if (!clicked.isOpen) 
    clickOnNode(folderId) 
 
  return  
 
  if (clicked.isSelected) 
    return 
} 

function clickOnNode(folderId) 
{ 
  var clickedFolder = 0 
  var state = 0 
 
  clickedFolder = indexOfEntries[folderId] 
  state = clickedFolder.isOpen 
 
  clickedFolder.setState(!state) 
}

function initializeDocument()
{ 
  if (doc.all) 
    browserVersion = 1 
  else 
    if (doc.layers) 
      browserVersion = 2 
    else 
      browserVersion = 0 
 
  root0.initialize(0, 1, "") 
  root0.display()
  
  if (browserVersion > 0) 
  { 
    doc.write("<layer top="+indexOfEntries[nEntries-1].navObj.top+">&nbsp;</layer>")
 
 
    clickOnNode(0) 

    clickOnNode(0) 
  } 
} 
 
 function gFld(description, hreference) 
{ 
  folder = new Folder(description, hreference) 
  return folder 
} 

function gLnk(target, description, linkData) 
{ 
  fullLink = "" 
 
  if (target==0) 
  { 
    fullLink = "'"+linkData+"' target=\"basefrm\"" 
  } 
  else 
  { 
	fullLink = "'#' onClick='javascript:MyGotoPage(" + linkData + "); return false'"
  } 
  linkItem = new Item(description, fullLink)   
  return linkItem 
} 

function insFld(parentFolder, childFolder) 
{ 
  return parentFolder.addChild(childFolder) 
} 
 
function insDoc(parentFolder, document) 
{ 
  parentFolder.addChild(document) 
} 
 
USETEXTLINKS = 1
indexOfEntries = new Array 
nEntries = 0 
doc = document 
browserVersion = 0 
selectedFolder=0

</script>
<script>
root0 = gFld("Arts", "")
insDoc(root0, gLnk(2,"PO 102.  Make and explain revisions in his or her own artwork .", "3"))
insDoc(root0, gLnk(2,"PO 202.  Make and explain revisions in his or her own artwork .", "3"))
insDoc(root0, gLnk(2,"PO 302.  Make and explain revisions in his or her own artwork .", "3"))
insDoc(root0, gLnk(2,"PO 401.  Select his or her own artwork for a portfolio that demonstrates artistic achievement.", "7"))
insDoc(root0, gLnk(2,"PO 403.  Create a public exhibition of his or her own artwork  that reflects personal growth as an artist.", "7"))
insDoc(root0, gLnk(2,"PO 102.  Describe what tools, materials ,and techniques were used to create artwork from diverse cultures and times.", "8"))
insDoc(root0, gLnk(2,"PO 202.  Describe what tools, materials, and techniques were used to create artwork from diverse cultures and times.", "8"))
insDoc(root0, gLnk(2,"PO 302.  Describe and analyze what tools, materials, and techniques were used to create artwork from diverse cultures and times.", "8"))
insDoc(root0, gLnk(2,"PO 402.  Investigate geographical, social, cultural, or artworld factors that influence an artists selection of material, tools, and techniques.", "8"))
insDoc(root0, gLnk(2,"PO 401.  Research the origins of artistic traditions and visual conventions (visual/tactile qualities) valued by diverse cultures (e.g., Native American, Chicano/a, European, African, Asian, Pacific Islander.)", "10"))
insDoc(root0, gLnk(2,"PO 202.  Discuss themes in artworks that illustrate common human experiences that transcend culture, time, and place.", "11"))
insDoc(root0, gLnk(2,"Beginning", "14"))
insDoc(root0, gLnk(2,"Distinction", "14"))
insDoc(root0, gLnk(2,"Advanced", "15"))
insDoc(root0, gLnk(2,"Distinction", "15"))
insDoc(root0, gLnk(2,"PO 001.  Identify an element in an artwork that supports its meaning and/or purpose.", "15"))
insDoc(root0, gLnk(2,"PO 401.  Select criteria to judge the effectiveness of an artists use of elements and principles in a composition to support the meaning and/or purpose of an artwork.", "15"))
insDoc(root0, gLnk(2,"Beginning", "16"))
insDoc(root0, gLnk(2,"Distinction", "16"))
root1 = insFld(root0, gFld("Beginning", "17"))
insDoc(root1, gLnk(2,"Intermediate", "17"))
root1 = insFld(root0, gFld("Distinction", "17"))
insDoc(root1, gLnk(2,"DANCE STANDARDS OVERVIEW", "23"))
insDoc(root1, gLnk(2,"Concept 1: Body", "26"))
insDoc(root1, gLnk(2,"Concept 1: Body (page 2)", "27"))
insDoc(root1, gLnk(2,"Concept 2: Movement Skills", "28"))
insDoc(root1, gLnk(2,"Concept 2: Movement Skills (page 2)", "29"))
insDoc(root1, gLnk(2,"Concept 3: Elements of Dance", "30"))
insDoc(root1, gLnk(2,"Concept 3: Elements of Dance (page 3)", "32"))
insDoc(root1, gLnk(2,"PO 6", "32"))
insDoc(root1, gLnk(2,"PO 7", "32"))
insDoc(root1, gLnk(2,"Concept 3: Elements of Dance (page 3)", "33"))
insDoc(root1, gLnk(2,"Concept 4: Improvisation/Choreography", "34"))
insDoc(root1, gLnk(2,"Concept 4: Improvisation/Choreography", "35"))
insDoc(root1, gLnk(2,"Concept 4: Improvisation/Choreography", "36"))
insDoc(root1, gLnk(2,"Concept 5: Performance Values", "37"))
insDoc(root1, gLnk(2,"Concept 6: Production Design", "38"))
insDoc(root1, gLnk(2,"Concept 6: Production Design", "39"))
insDoc(root1, gLnk(2,"Concept 1: Dance Forms/History", "41"))
insDoc(root1, gLnk(2,"Concept 1: Dance Forms/History", "42"))
insDoc(root1, gLnk(2,"Concept 2: Social and Cultural Influences", "43"))
insDoc(root1, gLnk(2,"Concept 2: Social and Cultural Influences", "44"))
insDoc(root1, gLnk(2,"Concept 3: Dance and Literacy", "45"))
root1 = insFld(root0, gFld("Using text to create movement", "45"))
insDoc(root1, gLnk(2,"Concept 4: Dance and other disciplines", "46"))
insDoc(root1, gLnk(2,"Concept 4: Dance and other disciplines", "47"))
insDoc(root1, gLnk(2,"Concept 5: Dance and Music", "48"))
insDoc(root1, gLnk(2,"Concept 5: Dance and Music", "49"))
insDoc(root1, gLnk(2,"Concept 1: Understanding Dance ", "51"))
root2 = insFld(root1, gFld("Concept 1: Understanding Dance (page 2)", "52"))
root3 = insFld(root2, gFld("PO 4", "52"))
insDoc(root3, gLnk(2,"Personal Interpretation", "52"))
insDoc(root1, gLnk(2,"Concept 2: Professionalism ", "53"))
insDoc(root1, gLnk(2,"Concept 2: Professionalism ", "54"))
root1 = insFld(root0, gFld("Audience Etiquette", "54"))
insDoc(root1, gLnk(2,"Asymmetry:  Irregular design, off balance, uneven", "55"))
insDoc(root1, gLnk(2,"Axial movement: Movement around a center point", "55"))
insDoc(root1, gLnk(2," Bend:  To fold or hinge", "55"))
insDoc(root0, gLnk(2,"Push:  To move away from oneself", "55"))
root1 = insFld(root0, gFld("Sequential forms:  Phrases are arranged one after the other", "56"))
root2 = insFld(root1, gFld("Theme and Variation:  A structure that allows the phrase to be developed by manipulating the elements of dance.", "56"))
insDoc(root2, gLnk(2,"Use of Coherence:  Harmony in parts of space", "57"))
insDoc(root1, gLnk(2,"Crew Members:  Individuals working to produce costumes, sets, lights or other production needs.", "58"))
insDoc(root1, gLnk(2,"Elements of Dance:  Time, Space and Energy ", "59"))
root1 = insFld(root0, gFld("Elements of Time ", "59"))
insDoc(root1, gLnk(2,"Elements of Energy", "59"))
insDoc(root0, gLnk(2,"Improvisational Strategies:  Techniques for enticing and engaging dancers in new movement experiences", "60"))
insDoc(root0, gLnk(2,"Sensory Awareness:  Touch, smell, hearing, kinesthesia, sight or taste used as a means of inspiration for dance", "60"))
root1 = insFld(root0, gFld("Improvisational Structures: Guidelines, prompts, directives given to students in order to elicit spontaneous movement responses.", "60"))
root2 = insFld(root1, gFld("Production Terminology:  Vocabulary associated with the process of preparing dance for presentation", "61"))
insDoc(root2, gLnk(2,"Production Personnel", "61"))
insDoc(root2, gLnk(2,"Production Process", "61"))
insDoc(root2, gLnk(2,"Stage Area", "62"))
root3 = insFld(root2, gFld("Lighting", "62"))
insDoc(root3, gLnk(2,"Qualities of Movement", "63"))
insDoc(root1, gLnk(2,"Symmetry:  Both halves the same. Balanced", "63"))
insDoc(root1, gLnk(2,"Concept 3: Improvising rhythms, melodies, variations, and accompaniments ", "71"))
root2 = insFld(root1, gFld("(Teachers and students may choose from a variety of sound sources e.g., body percussion, found objects, non-pitched instruments, pitched instruments, computer generated sound sources.)", "71"))
insDoc(root2, gLnk(2,"Concept 5: Reading and notating music.", "73"))
insDoc(root1, gLnk(2,"PO 101.", "85"))
insDoc(root1, gLnk(2,"properly assembling and identifying the various parts of their instruments.", "85"))
root2 = insFld(root1, gFld("playing the Concert Bb, F, and Eb major scales one octave on wind and mallet percussion instruments.", "86"))
insDoc(root2, gLnk(2,"Concept 5: Reading and notating music.", "91"))
insDoc(root2, gLnk(2,"Concept 5: Reading and notating music.", "100"))
insDoc(root1, gLnk(2,"PO 301.", "102"))
insDoc(root1, gLnk(2,"maintaining a steady beat without external assistance.", "102"))
insDoc(root1, gLnk(2,"PO 401.", "102"))
insDoc(root1, gLnk(2,"maintaining a steady beat, recognizing the macro and micro beat, exhibiting an understanding through appropriate movement (e.g., conducting, choreography).", "102"))
insDoc(root1, gLnk(2,"PO 102.", "102"))
root2 = insFld(root1, gFld("adjusting and matching pitches.", "102"))
insDoc(root2, gLnk(2,"Concept 5: Reading and notating music.", "109"))
insDoc(root2, gLnk(2," ", "111"))
insDoc(root0, gLnk(2,"PO 201. Adapt a short, non dramatic literary selection into a scripted dramatic format (e.g. folktale, poem, life story) ", "136"))
insDoc(root0, gLnk(2,"PO 202.    Dramatize and document scenes using a variety of characters to develop monologues and/or  dialogue.", "136"))
insDoc(root0, gLnk(2,"PO 203 Dramatize and document scenes based on life experiences using a variety of conflicts to create resolution to the story. ", "136"))
root1 = insFld(root0, gFld("PO303. Create a script through improvisation and devised scenes based on personal experience,  heritage, imagination, literature, and/or history.", "136"))
insDoc(root1, gLnk(2,"Advanced", "142"))
insDoc(root1, gLnk(2,"Advanced", "143"))
</script><script>initializeDocument()</script></head>
	<body bgcolor=white  style="border-right: 2 solid #CCCCCC">
	</body>
	</html>