<html>
<head>
<style type="text/css">
<!--body{ margin-top: 5px; margin-right: 5px; margin-bottom: 5px; margin-left: 5px; background-color: #FFFFFF}
.toolbar { width: 20px; font: 12px Helvetica, Arial, sans-serif; color: #000000; margin-top: -1px; margin-right: 0px; margin-bottom: 0px; margin-left: 0px}
img { border: 0}
A:link {text-decoration: none; color: #3300FF}
A:visited {text-decoration: none; color: #CC00FF}
A:active {text-decoration: #FF0000}
A:hover {text-decoration: underline; color:#FF0000}
-->
</style>
<script language="javascript"> 
<!-- hide
function killerrors() {
return true;
}
window.onerror = killerrors;
// -->
</script>

<!-- Infrastructure code for the tree -->
<script>

function MyGotoPage(newPage)
{
	parent.ltop.gotopage(newPage);
}
function Folder(folderDescription, hreference)
{
  this.desc = folderDescription
  this.hreference = hreference 
  this.id = -1   
  this.navObj = 0  
  this.iconImg = 0  
  this.nodeImg = 0  
  this.isLastNode = 0 
 
  this.isOpen = true 
  this.iconSrc = "images/pg_bopen.gif"
  this.children = new Array 
  this.nChildren = 0 
 
  this.initialize = initializeFolder 
  this.setState = setStateFolder 
  this.addChild = addChild 
  this.createIndex = createEntryIndex 
  this.hide = hideFolder 
  this.display = display 
  this.renderOb = drawFolder 
  this.totalHeight = totalHeight 
  this.subEntries = folderSubEntries 
  this.outputLink = outputFolderLink 
} 
 
function setStateFolder(isOpen) 
{ 
  var subEntries 
  var totalHeight 
  var fIt = 0 
  var i=0 
 
  if (isOpen == this.isOpen) 
    return 
 
  if (browserVersion == 2)  
  { 
    totalHeight = 0 
    for (i=0; i < this.nChildren; i++) 
      totalHeight = totalHeight + this.children[i].navObj.clip.height 
      subEntries = this.subEntries() 
    if (this.isOpen) 
      totalHeight = 0 - totalHeight 
    for (fIt = this.id + subEntries + 1; fIt < nEntries; fIt++) 
      indexOfEntries[fIt].navObj.moveBy(0, totalHeight) 
  }  
  this.isOpen = isOpen 
  propagateChangesInState(this) 
} 
 
function propagateChangesInState(folder) 
{   
  var i=0 
 
  if (folder.isOpen) 
  { 
    if (folder.nodeImg) 
      if (folder.isLastNode) 
        folder.nodeImg.src = "images/pg_bmlastnode.gif" 
      else 
	  folder.nodeImg.src = "images/pg_bmnode.gif" 
    folder.iconImg.src = "images/pg_bopen.gif" 
    for (i=0; i<folder.nChildren; i++) 
      folder.children[i].display() 
  } 
  else 
  { 
    if (folder.nodeImg) 
      if (folder.isLastNode) 
        folder.nodeImg.src = "images/pg_bplastnode.gif" 
      else 
	  folder.nodeImg.src = "images/pg_bpnode.gif" 
    folder.iconImg.src = "images/pg_bclosed.gif" 
    for (i=0; i<folder.nChildren; i++) 
      folder.children[i].hide() 
  }  
} 
 
function hideFolder() 
{ 
  if (browserVersion == 1) { 
    if (this.navObj.style.display == "none") 
      return 
    this.navObj.style.display = "none" 
  } else { 
    if (this.navObj.visibility == "hiden") 
      return 
    this.navObj.visibility = "hiden" 
  } 
   
  this.setState(0) 
} 
 
function initializeFolder(level, lastNode, leftSide) 
{ 
var j=0 
var i=0 
var numberOfFolders 
var numberOfDocs 
var nc 
      
  nc = this.nChildren 
   
  this.createIndex() 
 
  var auxEv = "" 
 
  if (browserVersion > 0) 
    auxEv = "<a href='javascript:clickOnNode("+this.id+")'>" 
  else 
    auxEv = "<a>" 
 
  if (level>0) 
    if (lastNode) 
    { 
      this.renderOb(leftSide + auxEv + "<img name='nodeIcon" + this.id + "' src='images/pg_bmlastnode.gif' width=16 height=22 border=0></a>") 
      leftSide = leftSide + "<img src='images/pg_bblank.gif' width=16 height=22>"  
      this.isLastNode = 1 
    } 
    else 
    { 
      this.renderOb(leftSide + auxEv + "<img name='nodeIcon" + this.id + "' src='images/pg_bmnode.gif' width=16 height=22 border=0></a>") 
      leftSide = leftSide + "<img src='images/pg_bvertline.gif' width=16 height=22>" 
      this.isLastNode = 0 
    } 
  else 
    this.renderOb("") 
   
  if (nc > 0) 
  { 
    level = level + 1 
    for (i=0 ; i < this.nChildren; i++)  
    { 
      if (i == this.nChildren-1) 
        this.children[i].initialize(level, 1, leftSide) 
      else 
        this.children[i].initialize(level, 0, leftSide) 
      } 
  } 
} 
 
function drawFolder(leftSide) 
{ 
  if (browserVersion == 2) { 
    if (!doc.yPos) 
      doc.yPos=8 
    doc.write("<layer id='folder" + this.id + "' top=" + doc.yPos + " visibility=hiden>") 
  } 
   
  doc.write("<table class='toolbar' ") 
  if (browserVersion == 1) 
    doc.write(" id='folder" + this.id + "' style='position:block;' ") 
  doc.write(" border=0 cellspacing=0 cellpadding=0>") 
  doc.write("<tr><td>") 
  doc.write(leftSide) 
this.outputLink() 
  doc.write("<img name='folderIcon" + this.id + "' ") 
  doc.write("src='" + this.iconSrc+"' border=0></a>") 
  doc.write("</td><td valign=middle nowrap>") 
  if (USETEXTLINKS) 
  { 
    this.outputLink() 
    doc.write(this.desc + "</a>") 
  } 
  else 
    doc.write(this.desc) 
  doc.write("</td>")  
  doc.write("</table>") 
   
  if (browserVersion == 2) { 
    doc.write("</layer>") 
  } 
 
  if (browserVersion == 1) { 
    this.navObj = doc.all["folder"+this.id] 
    this.iconImg = doc.all["folderIcon"+this.id] 
    this.nodeImg = doc.all["nodeIcon"+this.id] 
  } else if (browserVersion == 2) { 
    this.navObj = doc.layers["folder"+this.id] 
    this.iconImg = this.navObj.document.images["folderIcon"+this.id] 
    this.nodeImg = this.navObj.document.images["nodeIcon"+this.id] 
    doc.yPos=doc.yPos+this.navObj.clip.height 
  } 
} 
 
function outputFolderLink() 
{ 
  if (this.hreference) 
  { 
    doc.write("<a href='#' onClick='javascript:MyGotoPage(" + this.hreference + "); return false'") 
    if (browserVersion > 0) 
      doc.write("onClick='javascript:clickOnFolder("+this.id+")'") 
    doc.write(">") 
  } 
  else 
    doc.write("<a>") 
} 
 
function addChild(childNode) 
{ 
  this.children[this.nChildren] = childNode 
  this.nChildren++ 
  return childNode 
} 
 
function folderSubEntries() 
{ 
  var i = 0 
  var se = this.nChildren 
 
  for (i=0; i < this.nChildren; i++){ 
    if (this.children[i].children) 
      se = se + this.children[i].subEntries() 
  } 
 
  return se 
} 
 
function Item(itemDescription, itemLink)  
{ 
  this.desc = itemDescription 
  this.link = itemLink 
  this.id = -1 
  this.navObj = 0 
  this.iconImg = 0 
  this.iconSrc = "images/pg_bdoc.gif" 
 
  this.initialize = initializeItem 
  this.createIndex = createEntryIndex 
  this.hide = hideItem 
  this.display = display 
  this.renderOb = drawItem 
  this.totalHeight = totalHeight 
} 
 
function hideItem() 
{ 
  if (browserVersion == 1) { 
    if (this.navObj.style.display == "none") 
      return 
    this.navObj.style.display = "none" 
  } else { 
    if (this.navObj.visibility == "hiden") 
      return 
    this.navObj.visibility = "hiden" 
  }     
} 
 
function initializeItem(level, lastNode, leftSide) 
{  
  this.createIndex() 
 
  if (level>0) 
    if (lastNode) 
    { 
      this.renderOb(leftSide + "<img src='images/pg_blastnode.gif' width=16 height=22>") 
      leftSide = leftSide + "<img src='images/pg_bblank.gif' width=16 height=22>"  
    } 
    else 
    { 
      this.renderOb(leftSide + "<img src='images/pg_bnode.gif' width=16 height=22>") 
      leftSide = leftSide + "<img src='images/pg_bvertline.gif' width=16 height=22>" 
    } 
  else 
    this.renderOb("")   
} 
 
function drawItem(leftSide) 
{ 
  if (browserVersion == 2) 
    doc.write("<layer id='item" + this.id + "' top=" + doc.yPos + " visibility=hiden>") 
     
  doc.write("<table class='toolbar' ") 
  if (browserVersion == 1) 
    doc.write(" id='item" + this.id + "' style='position:block;' ") 
  doc.write(" border=0 cellspacing=0 cellpadding=0>") 
  doc.write("<tr><td>") 
  doc.write(leftSide) 
  doc.write("<a href=" + this.link + ">") 
  doc.write("<img id='itemIcon"+this.id+"' ") 
  doc.write("src='"+this.iconSrc+"' border=0>") 
doc.write("</a>") 
  doc.write("</td><td valign=middle nowrap>") 
  if (USETEXTLINKS) 
    doc.write("<a href=" + this.link + ">" + this.desc + "</a>") 
  else 
    doc.write(this.desc) 
  doc.write("</table>") 
   
  if (browserVersion == 2) 
    doc.write("</layer>") 
 
  if (browserVersion == 1) { 
    this.navObj = doc.all["item"+this.id] 
    this.iconImg = doc.all["itemIcon"+this.id] 
  } else if (browserVersion == 2) { 
    this.navObj = doc.layers["item"+this.id] 
    this.iconImg = this.navObj.document.images["itemIcon"+this.id] 
    doc.yPos=doc.yPos+this.navObj.clip.height 
  } 
} 
 
 
function display() 
{ 
  if (browserVersion == 1) 
    this.navObj.style.display = "block" 
  else 
    this.navObj.visibility = "show" 
} 
 
function createEntryIndex() 
{ 
  this.id = nEntries 
  indexOfEntries[nEntries] = this 
  nEntries++ 
} 

function totalHeight()
{ 
  var h = this.navObj.clip.height 
  var i = 0 
   
  if (this.isOpen) 
    for (i=0 ; i < this.nChildren; i++)  
      h = h + this.children[i].totalHeight() 
 
  return h 
} 

function clickOnFolder(folderId) 
	{ 
		var clicked = indexOfEntries[folderId] 
 
  if (!clicked.isOpen) 
    clickOnNode(folderId) 
 
  return  
 
  if (clicked.isSelected) 
    return 
} 

function clickOnNode(folderId) 
{ 
  var clickedFolder = 0 
  var state = 0 
 
  clickedFolder = indexOfEntries[folderId] 
  state = clickedFolder.isOpen 
 
  clickedFolder.setState(!state) 
}

function initializeDocument()
{ 
  if (doc.all) 
    browserVersion = 1 
  else 
    if (doc.layers) 
      browserVersion = 2 
    else 
      browserVersion = 0 
 
  root0.initialize(0, 1, "") 
  root0.display()
  
  if (browserVersion > 0) 
  { 
    doc.write("<layer top="+indexOfEntries[nEntries-1].navObj.top+">&nbsp;</layer>")
 
 
    clickOnNode(0) 

    clickOnNode(0) 
  } 
} 
 
 function gFld(description, hreference) 
{ 
  folder = new Folder(description, hreference) 
  return folder 
} 

function gLnk(target, description, linkData) 
{ 
  fullLink = "" 
 
  if (target==0) 
  { 
    fullLink = "'"+linkData+"' target=\"basefrm\"" 
  } 
  else 
  { 
	fullLink = "'#' onClick='javascript:MyGotoPage(" + linkData + "); return false'"
  } 
  linkItem = new Item(description, fullLink)   
  return linkItem 
} 

function insFld(parentFolder, childFolder) 
{ 
  return parentFolder.addChild(childFolder) 
} 
 
function insDoc(parentFolder, document) 
{ 
  parentFolder.addChild(document) 
} 
 
USETEXTLINKS = 1
indexOfEntries = new Array 
nEntries = 0 
doc = document 
browserVersion = 0 
selectedFolder=0

</script>
<script>
root0 = gFld("Science and Technology", "")
insDoc(root0, gLnk(2,"Massachusetts", "1"))
root1 = insFld(root0, gFld("Science and Technology/Engineering Curriculum Framework", "1"))
root2 = insFld(root1, gFld("October 2006", "1"))
root3 = insFld(root2, gFld("Massachusetts Department of Education", "1"))
insDoc(root3, gLnk(2,"Commissioners Foreward iii", "3"))
insDoc(root3, gLnk(2,"Acknowledgments v", "3"))
insDoc(root3, gLnk(2,"Organization of the Framework 1", "3"))
insDoc(root3, gLnk(2,"Philosophy and Vision", "3"))
insDoc(root3, gLnk(2," Purpose and Nature of Science and Technology/Engineering 7", "3"))
insDoc(root3, gLnk(2," Inquiry, Experimentation, and Design in the Classroom 9", "3"))
insDoc(root3, gLnk(2," Guiding Principles 13", "3"))
insDoc(root3, gLnk(2,"Science and Technology/Engineering Learning Standards", "3"))
insDoc(root3, gLnk(2," Earth and Space Science 23", "3"))
insDoc(root3, gLnk(2," Life Science (Biology) 41", "3"))
insDoc(root3, gLnk(2," Physical Sciences (Chemistry and Physics) 61", "3"))
insDoc(root3, gLnk(2," Technology/Engineering 81", "3"))
insDoc(root3, gLnk(2,"Appendices", "3"))
insDoc(root3, gLnk(2," I. PreK through High School Learning Standards Organized by ", "3"))
insDoc(root3, gLnk(2,"  Strand and Broad Topics 103", "3"))
insDoc(root3, gLnk(2," II. Additional Learning Activities for Grade PreK through Grade 8 115", "3"))
insDoc(root3, gLnk(2," III. Historical and Social Context for Science and Technology/Engineering: ", "3"))
insDoc(root3, gLnk(2,"  Topics for Study 123", "3"))
insDoc(root3, gLnk(2," IV. Safety Practices and Legal Requirements 125", "3"))
insDoc(root3, gLnk(2," V. Dissection and Dissection Alternatives in Science Courses:", "3"))
insDoc(root3, gLnk(2,"  Policies and Resources for Massachusetts Public Schools 133", "3"))
insDoc(root3, gLnk(2," VI. Curriculum Review Resources 141", "3"))
insDoc(root3, gLnk(2," VII. Criteria for Evaluating Instructional Materials and Programs in", "3"))
insDoc(root3, gLnk(2,"  Science and Technology/Engineering 143", "3"))
insDoc(root3, gLnk(2,"References", "3"))
insDoc(root3, gLnk(2," Glossary of Selected Science and Technology/Engineering Terms 147", "3"))
insDoc(root3, gLnk(2," Selected Bibliography 151", "3"))
insDoc(root3, gLnk(2," Selected Websites for Science and Technology/Engineering Education 153", "3"))
insDoc(root0, gLnk(2,"Learning Standard", "33"))
insDoc(root0, gLnk(2,"Learning Standard", "34"))
insDoc(root0, gLnk(2,"Learning Standard", "35"))
insDoc(root0, gLnk(2,"Learning Standard", "36"))
root1 = insFld(root0, gFld("Learning Standard", "37"))
insDoc(root1, gLnk(2," ", "39"))
insDoc(root0, gLnk(2,"Learning Standard", "40"))
insDoc(root0, gLnk(2,"Learning Standard", "41"))
insDoc(root0, gLnk(2,"Learning Standard", "52"))
insDoc(root0, gLnk(2,"Learning Standard", "53"))
insDoc(root0, gLnk(2,"Learning Standard", "54"))
insDoc(root0, gLnk(2,"Learning Standard", "55"))
insDoc(root0, gLnk(2,"Learning Standard", "56"))
root1 = insFld(root0, gFld("Learning Standard", "57"))
insDoc(root1, gLnk(2," ", "57"))
insDoc(root0, gLnk(2,"Learning Standard", "59"))
insDoc(root0, gLnk(2,"Learning Standard", "60"))
root1 = insFld(root0, gFld("Learning Standard", "61"))
insDoc(root1, gLnk(2,"Responses to Running", "67"))
insDoc(root0, gLnk(2,"Learning Standard", "71"))
insDoc(root0, gLnk(2,"Learning Standard", "72"))
insDoc(root0, gLnk(2,"Learning Standard", "73"))
insDoc(root0, gLnk(2,"Learning Standard", "74"))
insDoc(root0, gLnk(2,"Learning Standard", "75"))
insDoc(root0, gLnk(2,"Learning Standard", "76"))
insDoc(root0, gLnk(2,"Learning Standards", "93"))
insDoc(root0, gLnk(2,"Learning Standards", "94"))
insDoc(root0, gLnk(2,"Learning Standards", "95"))
insDoc(root0, gLnk(2,"Suggested Learning Activities", "95"))
insDoc(root0, gLnk(2,"Learning Standards", "96"))
insDoc(root0, gLnk(2,"Suggested Learning Activities", "96"))
insDoc(root0, gLnk(2,"Learning Standards", "97"))
root1 = insFld(root0, gFld("Suggested Learning Activities", "97"))
insDoc(root1, gLnk(2,"Communication ", "120"))
insDoc(root1, gLnk(2,"Construction", "121"))
insDoc(root0, gLnk(2,"I. Scientific and Technological Contents", "151"))
insDoc(root0, gLnk(2,"II. Features", "151"))
insDoc(root0, gLnk(2,"III. Learning Activities", "151"))
insDoc(root0, gLnk(2,"IV. Teacher Support Materials", "152"))
insDoc(root0, gLnk(2,"V. Student Assessment Materials", "152"))
root1 = insFld(root0, gFld("VI. Program Development and Implementation", "152"))
insDoc(root1, gLnk(2,"General Science and Technology/Engineering Resources", "161"))
insDoc(root1, gLnk(2,"General Science and Technology/Engineering Resources (cont.)", "162"))
insDoc(root1, gLnk(2,"Website", "162"))
</script><script>initializeDocument()</script></head>
	<body bgcolor=white  style="border-right: 2 solid #CCCCCC">
	</body>
	</html>